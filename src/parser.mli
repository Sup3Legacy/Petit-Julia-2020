type token =
	|Not_a_token
	|INT of (Ast.position*int)
	|CHAINE of (Ast.position*string)
	|IDENT of (Ast.position*string)
	|EOF
	|PARG of (Ast.position)
	|PARD of (Ast.position)
	|AFFECT of (Ast.position)
	|OR of (Ast.position)
	|AND of (Ast.position)
	|EQ of (Ast.position)
	|NEQ of (Ast.position)
	|L of (Ast.position)
	|G of (Ast.position)
	|LEQ of (Ast.position)
	|GEQ of (Ast.position)
	|PLUS of (Ast.position)
	|MINUS of (Ast.position)
	|TIMES of (Ast.position)
	|MODULO of (Ast.position)
	|EXP of (Ast.position)
	|NOT of (Ast.position)
	|DOT of (Ast.position)
	|ELSE of (Ast.position)
	|ELSEIF of (Ast.position)
	|END of (Ast.position)
	|FALSE of (Ast.position)
	|FOR of (Ast.position)
	|FUNCTION of (Ast.position)
	|IF of (Ast.position)
	|MUTABLE
	|RETURN of (Ast.position)
	|STRUCT of (Ast.position)
	|TRUE of (Ast.position)
	|WHILE of (Ast.position)
	|ENTIER_IDENT of (Ast.position*int * string)
	|IDENT_PARG of (Ast.position*string)
	|ENTIER_PARG of (Ast.position*int)
	|PARD_IDENT of (Ast.position*string)
	|TYPE
	|COLON of (Ast.position)
	|SEMICOLON of (Ast.position)
	|COMMA of (Ast.position)
	|DOCSTRING of (string)

val fichier: (Lexing.lexbuf -> token) -> Lexing.lexbuf -> (Ast.fichier)
